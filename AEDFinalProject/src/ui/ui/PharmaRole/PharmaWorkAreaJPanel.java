/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.ui.PharmaRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.prescribeMedicine;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vraj
 */
public class PharmaWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmaWorkAreaJPanel
     */
     private JPanel userProcessContainer;
     private UserAccount account;
     private Organization organization;
     private Enterprise enterprise;
     private EcoSystem business;
//     private UserAccount person;
    public PharmaWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.account = account;
        this.business = business;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        lblValue.setText(account.getEmployee().getName());
//        this.person = person;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAvailable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedList = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnNotAvailable = new javax.swing.JButton();
        lblText = new javax.swing.JLabel();
        lblValue = new javax.swing.JLabel();

        setBackground(new java.awt.Color(36, 47, 65));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMinimumSize(new java.awt.Dimension(1440, 848));
        setPreferredSize(new java.awt.Dimension(1440, 848));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAvailable.setText("Available");
        btnAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailableActionPerformed(evt);
            }
        });
        add(btnAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, -1, -1));

        tblMedList.setBackground(new java.awt.Color(97, 212, 195));
        tblMedList.setForeground(new java.awt.Color(36, 47, 65));
        tblMedList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Person", "Doctor", "Receiver", "Medicine List", "Status"
            }
        ));
        tblMedList.setFocusable(false);
        tblMedList.setGridColor(new java.awt.Color(97, 212, 195));
        tblMedList.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblMedList.setRowHeight(20);
        jScrollPane1.setViewportView(tblMedList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 630, 180));

        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/PHARMAWORKAREA.png"))); // NOI18N
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 0, 100, 850));

        btnNotAvailable.setText("Not Available");
        btnNotAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotAvailableActionPerformed(evt);
            }
        });
        add(btnNotAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, -1, -1));

        lblText.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        lblText.setForeground(new java.awt.Color(255, 255, 255));
        lblText.setText("Currently Logged in as:");
        add(lblText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, 30));

        lblValue.setFont(new java.awt.Font("Optima", 1, 22)); // NOI18N
        lblValue.setForeground(new java.awt.Color(97, 212, 195));
        lblValue.setText("<value>");
        add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 230, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailableActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMedList.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        WorkRequest r = (WorkRequest) tblMedList.getModel().getValueAt(selectedRow, 0);
        r.setStatus("Available");
        populateTable();
    }//GEN-LAST:event_btnAvailableActionPerformed

    private void btnNotAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotAvailableActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMedList.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        WorkRequest r = (WorkRequest) tblMedList.getModel().getValueAt(selectedRow, 0);
        r.setStatus("Not available");
        populateTable();
    }//GEN-LAST:event_btnNotAvailableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailable;
    private javax.swing.JButton btnNotAvailable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblText;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblValue;
    private javax.swing.JTable tblMedList;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblMedList.getModel();
        model.setRowCount(0);
        
            System.out.println("Outside for");
        for(WorkRequest wr : account.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            System.out.println("inside for");
//            if(wr instanceof prescribeMedicine){
                
            System.out.println("wr found");
                row[0] = wr;
                row[1] = wr.getSender().getUsername();
                row[2] = wr.getReceiver().getUsername();
                String ml = ((prescribeMedicine) wr).getMedList();
                row[3] = ml;
                row[4] = wr.getStatus();
                model.addRow(row);
//            }
        }
    }
}
