/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PersonRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.PersonOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.appointment;
import Business.WorkQueue.prescribeMedicine;
import Business.WorkQueue.vaccinate;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abhis
 */
public class PersonWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonWorkAreaJPanel
     */
     private JPanel userProcessContainer;
     private UserAccount account;
     private PersonOrganization organization;
     private Enterprise enterprise;
     private EcoSystem business;
     private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
     private Date v1date;
    
    public PersonWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, PersonOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        populateVaccineTable();
        populateAppointmentTable();
        populateMedTable();
        Date td = new Date();
//        System.out.println(((td.getTime()-v1date.getTime())/(1000*60*60*24))%365);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        btnVaccine = new javax.swing.JButton();
        btnAppointment = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppoinment = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        PharmajTable = new javax.swing.JTable();

        jLabel3.setText("jLabel3");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        setBackground(new java.awt.Color(36, 47, 65));
        setMinimumSize(new java.awt.Dimension(1440, 848));
        setPreferredSize(new java.awt.Dimension(1440, 848));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVaccine.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnVaccine.setText("Schedule Vaccination");
        btnVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaccineActionPerformed(evt);
            }
        });
        add(btnVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, -1, -1));

        btnAppointment.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnAppointment.setText("Schedule Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });
        add(btnAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 720, -1, -1));

        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sender", "Vaccination Date", "Status", "Distribution Center", "Vaccine Name"
            }
        ));
        jScrollPane2.setViewportView(tblVaccineRequest);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 375, 204));

        tblAppoinment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Status", "Date"
            }
        ));
        jScrollPane1.setViewportView(tblAppoinment);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, 375, 169));

        PharmajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Person", "Doctor", "Pharmacy", "Medicine List", "Availability"
            }
        ));
        jScrollPane3.setViewportView(PharmajTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaccineActionPerformed
        // TODO add your handling code here:
        int count = tblVaccineRequest.getModel().getRowCount();
        if(count==0){
        populateVaccineTable();
        ScheduleVaccineJPanel scheduleVaccineJPanel = new ScheduleVaccineJPanel(userProcessContainer, organization, enterprise, business, account);
        userProcessContainer.add("scheduleVaccineJPanel", scheduleVaccineJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        dB4OUtil.storeSystem(business);
        }
        else{
            JOptionPane.showMessageDialog(this, "You already have a vaccination request submitted");
            return;
        }
    }//GEN-LAST:event_btnVaccineActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        int count = tblVaccineRequest.getModel().getRowCount();
        if(count!=0){
        populateAppointmentTable();
        ScheduleAppointmentJPanel scheduleAppointmentJPanel = new ScheduleAppointmentJPanel(userProcessContainer, organization, enterprise, business, account);
        userProcessContainer.add("scheduleAppointmentJPanel", scheduleAppointmentJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(this, "You can only book an appointment if you have received or a vaccination scheduled!!");
            return;
        }
    }//GEN-LAST:event_btnAppointmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PharmajTable;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnVaccine;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tblAppoinment;
    private javax.swing.JTable tblVaccineRequest;
    // End of variables declaration//GEN-END:variables

    private void populateVaccineTable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineRequest.getModel();
        model.setRowCount(0);
        System.out.println("out for");
        for(WorkRequest wr : account.getWorkQueue().getWorkRequestList()){
           Object[] row = new Object[5];
           
        System.out.println("in for");
           if(wr instanceof vaccinate){
               
        System.out.println("wr found");
           String Date = ((vaccinate) wr).getDate();
           
               
        System.out.println("in try");
               
        System.out.println("in if");
           row[0] = wr;
           
           row[1] = Date;
           
//           row[1] = null;
           row[2] = wr.getStatus();
           v1date = ((vaccinate) wr).getDt();
           System.out.println(v1date);
           Date td = new Date();
//           System.out.println(((td.getTime()-v1date.getTime())/(1000*60*60*24))%365);
           String dc = ((vaccinate) wr).getDistributionCenter();
           row[3] = dc;
           row[4] = null;
           model.addRow(row);
        
       
    }
        }
    }

    private void populateAppointmentTable() {
        DefaultTableModel model = (DefaultTableModel) tblAppoinment.getModel();
        model.setRowCount(0);
        
        for(WorkRequest wr : account.getWorkQueue().getWorkRequestList()){
           Object[] row = new Object[4];
           if(wr instanceof appointment){
           String hospitalName = ((appointment) wr).getHospitalName();
           if(hospitalName.length()!=0){
           row[0] = wr;
           String Date = ((appointment) wr).getDate();
           row[1] = hospitalName;
           row[2] = wr.getStatus();
           row[3] = Date;
           
           model.addRow(row);
           }
        }
        }
    }

    private void populateMedTable() {
        DefaultTableModel model = (DefaultTableModel)PharmajTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest wr : account.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            if(wr instanceof prescribeMedicine){
                row[0] = wr;
                row[1] = wr.getSender();
                row[2] = wr.getReceiver();
                row[3] = ((prescribeMedicine) wr).getMedList();
                row[4] = wr.getStatus();
                model.addRow(row);
                
            }
        }
    }
}
